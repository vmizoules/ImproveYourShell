# Customize your shell by Vincent Mizoules
# Add '#', if you want to disable a line

# GUARDIAN (avoid multiple inclusion)
#if test ! "$VMZBASHCOMPLETIONLOADED" = "yes"; then
#export VMZBASHCOMPLETIONLOADED="yes"
# GUARDIAN (see the end at the bottom)


# ========== Variables ========== #
color_prompt=yes

# ========== Functions ========== #

function gitAliasSetUp {
	git config --global color.ui auto
	git config --global alias.co checkout
	git config --global alias.ci commit
	git config --global alias.df diff
	git config --global alias.duff diff
	git config --global alias.st status
	git config --global alias.s status
	git config --global alias.t status
	git config --global alias.br branch
	git config --global alias.hist 'log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
	git config --global alias.type 'cat-file -t'
	git config --global alias.dump 'cat-file -p'
	git config --global alias.undo 'reset --soft HEAD^'
	echo "Done"
}

function exists_command
{
  command -v "$1" >/dev/null 2>&1
}

function loop {
	export SLEEP=0.2
	if test $# -eq 1
	then
		export SLEEP=$1
		echo "Tape command to loop, then press [ENTER]:"
		read CMD
	else
		if test $# -gt 1
		then
			echo "Usage: loop [time] (we'll try to make something good for you)"
		fi
		echo "Tape command to loop, then press [ENTER]:"
		read CMD
		echo -n "Loopback time (in seconds): "
		read SLEEP
		echo ""
	fi
	while test 1 -eq 1
	do
		$CMD
		sleep $SLEEP
	done
}

# ========== Aliases ========== #
#ls
alias ls='ls --color=never'
alias ll='ls -l'
alias cls='ls --color=always'
alias cll='cls -l'
alias sl='ls'
alias s='ls'
alias l='ls'

#git
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias go='git checkout '
alias gp='git push '
alias got='echo '\''-- -- Tape 'git' ! -- --'\'' && git'
alias gut='got'

#cd
alias c='cd'
alias cd.='cd ../'
alias cd..='cd ../../'
alias cd...='cd ../../../'
alias cd....='cd ../../../../'
alias cd.....='cd ../../../../../'
alias cd......='cd ../../../../../../'
alias cd-='cd -'
alias home="cd $HOME"
alias ..='cd ..'
alias www='cd /var/www'
alias log='cd /var/log'
alias logs='log'

#sys admin
alias ports='netstat -tulanp'
alias ping5='ping -c 5'
alias fastping='ping -c 100 -s.2'
alias psmem='ps auxf | sort -nr -k 4' #get top process eating memory
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias pscpu='ps auxf | sort -nr -k 3' #get top process eating cpu
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
alias size10='du -sk * | sort -rn | head -10'
alias size10r='du -Sh | sort -hr | head -10'

#docker
alias dps='docker ps'
alias d_container-clean='docker rm `docker ps -aq`'
alias d_stop-all='docker stop `docker ps -q`'
alias d_stop-all-forced='docker stop -t 0 `docker ps -q`'

#bashCompletion
alias bashcompletionupdate='bash <(curl -Ls http://git.io/vT9wm)'
alias updatebashcompletion='bashcompletionupdate'
alias promptupdate='bashcompletionupdate'
alias updateprompt='bashcompletionupdate'
alias bashcompletioninstall='bashcompletionupdate'
alias installbashcompletion='bashcompletionupdate'
alias bashcompletionremove='bash <(curl -Ls http://git.io/vTdtT)'
alias removebashcompletion='bashcompletionremove'
alias removeprompt='bashcompletionremove'
alias promptremove='bashcompletionremove'

#security
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'
alias rm='rm -i --preserve-root'

#others
alias whichWithAliases='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
alias cgrep='grep --color=auto'
alias nano='nano -cS'
alias webshare='python -m SimpleHTTPServer'
alias webshare3='python -m http.server'
alias json_prettyprint='python -m json.tool'

#functions (too complex to be alias)
function bak {
	echo "Saved '$1' in '$1.bak'"
	cp -R "$1" "$1.bak" ;
}

# ========== Shell options ========== #
if [[ `echo $BASH_VERSION | grep "^[3-9].*"` ]]; then
	# bash version > 3.0, enable some options
	shopt -s cdspell
fi
if [[ `echo $BASH_VERSION | grep "^[4-9].*"` ]]; then
        # bash version > 4.0, enable some options
        shopt -s autocd
        shopt -s dirspell
fi
if [[ `echo $BASH_VERSION | grep "^[4-9]\.[2-9].*"` ]]; then
	# bash version > 4.2, enable some options
	shopt -s direxpand
fi

# ========== Prompt ========== #
# Add git branch if its present to PS1
parse_git_branch() {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
# Avoid kube_ps1 error if not installed
if ! exists_command kube_ps1; then
    kube_ps1(){ unused(){ :;} }
fi

# Pretty prompt
if [ "$color_prompt" = yes ]; then

	# use a special color for root
	if [ "$USER" = "root" ]; then
		coloredPrompt='\[\033[1;31m\]\$ \[\033[00m\]'
	else
		coloredPrompt='\$ \[\033[00m\]'
	fi

	# special color for ssh
	coloredHost="@\h"
	if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
		coloredHost="\033[33m@\h(ssh)"
	fi

	#0 Normal 1 Bold 2 Dim 4 underline
	# DEFAULT="\033[00m"
	# BLACK="\033[30m"
	# RED="\033[31m"
	# GREEN="\033[32m"
	# ORANGE="\033[33m"
	# BLUE="\033[34m"
	# MAGENTA="\033[35m"
	# CYAN="\033[36m"
	# WHITE="\033[37m"
	# [\t]=[19:52:38] \u@\h=user@host \w=pwd
	PS1='\n[\t] ${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u'$coloredHost'\[\033[00m\]$(kube_ps1) : \[\033[01;34m\]\w\[\033[01;31m\] $(parse_git_branch)\[\033[00m\]\n'$coloredPrompt
else
	# without colors
	PS1='\n[\t] ${debian_chroot:+($debian_chroot)}\u@\h : \w $(parse_git_branch)\n\$ '
fi

# ========== Read file for your personnal modification ==========
PERSOCOMP="$HOME/.bash_personnal_completion"
if test -f $PERSOCOMP ; then
    source $PERSOCOMP
fi

# ========== Launch TMUX =========
if exists_command tmux; then
	# Tmux exists and we are in a shell
	if [[ $TERM == "screen" || $TERM == "cygwin" || $TERM == "xterm" ]]; then
		# Not already in a tmux session ? create a new
		#[[ -z "$TMUX" ]] && exec tmux #disabled because having some issues

		# Check tmux version
		if [[ `tmux -V | grep "^tmux 1.*"` ]] ; then
			# < 2.0 -> enable mouse mode if possible
			tmux set-option mouse-utf8 on > /dev/null
			tmux set-option mouse-resize-pane on > /dev/null
			tmux set-option mouse-select-pane on > /dev/null
			tmux set-option mouse-select-window on > /dev/null
			tmux set-window-option mode-mouse on > /dev/null
		else
			# > 2.0
			tmux set mouse on > /dev/null
		fi
		
		# Use CTRL+A instead of CTRL+B
		tmux set-option prefix C-a > /dev/null
	fi
fi



#fi # END OF GUARDIAN
